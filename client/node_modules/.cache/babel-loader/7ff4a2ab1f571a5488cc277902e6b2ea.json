{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, ACCOUNT_DELETED } from '../actions/types';\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  user: null\n};\nconsole.log(initialState.token);\n\nfunction authReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case AUTH_ERROR:\n    case LOGOUT:\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;","map":{"version":3,"sources":["C:/Users/nitshanm/Projects/Learning_Projects/leather_project_frontend/client/src/reducers/auth.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","ACCOUNT_DELETED","initialState","token","localStorage","getItem","isAuthenticated","loading","user","console","log","authReducer","state","action","type","payload"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,MAPJ,EAQIC,eARJ,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,EAAAA,eAAe,EAAE,KAFA;AAGjBC,EAAAA,OAAO,EAAE,IAHQ;AAIjBC,EAAAA,IAAI,EAAE;AAJW,CAArB;AAMAC,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACC,KAAzB;;AAEA,SAASQ,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBV,YAAsB;AAAA,MAARW,MAAQ;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACI,SAAKlB,WAAL;AACI,aAAO,EACH,GAAGgB,KADA;AAEHN,QAAAA,eAAe,EAAE,IAFd;AAGHC,QAAAA,OAAO,EAAE,KAHN;AAIHC,QAAAA,IAAI,EAAEO;AAJH,OAAP;;AAMJ,SAAKrB,gBAAL;AACA,SAAKI,aAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEH,WAAGG,OAFA;AAGHT,QAAAA,eAAe,EAAE,IAHd;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAKV,UAAL;AACA,SAAKG,MAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHT,QAAAA,KAAK,EAAE,IAFJ;AAGHG,QAAAA,eAAe,EAAE,KAHd;AAIHC,QAAAA,OAAO,EAAE,KAJN;AAKHC,QAAAA,IAAI,EAAE;AALH,OAAP;;AAOJ;AACI,aAAOI,KAAP;AA1BR;AA4BH;;AAED,eAAeD,WAAf","sourcesContent":["import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: false,\r\n    loading: true,\r\n    user: null\r\n};\r\nconsole.log(initialState.token)\r\n\r\nfunction authReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n                user: payload\r\n            };\r\n        case REGISTER_SUCCESS:\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: null\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n"]},"metadata":{},"sourceType":"module"}