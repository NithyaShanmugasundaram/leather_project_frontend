{"ast":null,"code":"import api from '../utils/api';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL //USER_LOADED,\n////AUTH_ERROR,\n//LOGIN_SUCCESS,\n//LOGIN_FAIL,\n//LOGOUT\n} from './types';\n/*\r\n  NOTE: we don't need a config object for axios as the\r\n default headers in axios are already Content-Type: application/json\r\n also axios stringifies and parses JSON for you, so no need for \r\n JSON.stringify or JSON.parse\r\n*/\n// Load User\n\nexport const loadUser = () => async dispatch => {\n  try {\n    const res = await api.get('/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = user => async dispatch => {\n  try {\n    const res = await api.post('/users', user);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login User\n// export const login = (email, password) => async (dispatch) => {\n//   const body = { email, password };\n//   try {\n//     const res = await api.post('/auth', body);\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n//     }\n//     dispatch({\n//       type: LOGIN_FAIL\n//     });\n//   }\n// };\n// Logout\n//export const logout = () => ({ type: LOGOUT });","map":{"version":3,"sources":["C:/Users/nitshanm/Projects/Learning_Projects/leather_project_frontend/src/actions/auth.js"],"names":["api","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","loadUser","dispatch","res","get","type","USER_LOADED","payload","data","err","AUTH_ERROR","register","user","post","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,cAAhB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,gBADF,EAEEC,aAFF,CAGE;AACA;AACA;AACA;AACA;AAPF,OAQO,SARP;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAQ,OAAR,CAAlB;AAEAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEC,WADC;AAEPC,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZP,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEK;AADC,KAAD,CAAR;AAGD;AACF,CAbM,C,CAeP;;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACpD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMN,GAAG,CAACgB,IAAJ,CAAS,QAAT,EAAmBD,IAAnB,CAAlB;AAEAV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,gBADC;AAEPQ,MAAAA,OAAO,EAAEJ,GAAG,CAACK;AAFN,KAAD,CAAR;AAIAN,IAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,GARD,CAQE,OAAOQ,GAAP,EAAY;AACZ,UAAMK,MAAM,GAAGL,GAAG,CAACM,QAAJ,CAAaP,IAAb,CAAkBM,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACE,OAAP,CAAgBC,KAAD,IAAWf,QAAQ,CAACJ,QAAQ,CAACmB,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACD;;AAEDhB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEL;AADC,KAAD,CAAR;AAGD;AACF,CApBM,C,CAsBP;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import api from '../utils/api';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  //USER_LOADED,\r\n  ////AUTH_ERROR,\r\n  //LOGIN_SUCCESS,\r\n  //LOGIN_FAIL,\r\n  //LOGOUT\r\n} from './types';\r\n\r\n/*\r\n  NOTE: we don't need a config object for axios as the\r\n default headers in axios are already Content-Type: application/json\r\n also axios stringifies and parses JSON for you, so no need for \r\n JSON.stringify or JSON.parse\r\n*/\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  try {\r\n    const res = await api.get('/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n// Register User\r\nexport const register = (user) => async (dispatch) => {\r\n  try {\r\n    const res = await api.post('/users', user);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\n// export const login = (email, password) => async (dispatch) => {\r\n//   const body = { email, password };\r\n\r\n//   try {\r\n//     const res = await api.post('/auth', body);\r\n\r\n//     dispatch({\r\n//       type: LOGIN_SUCCESS,\r\n//       payload: res.data\r\n//     });\r\n\r\n//     dispatch(loadUser());\r\n//   } catch (err) {\r\n//     const errors = err.response.data.errors;\r\n\r\n//     if (errors) {\r\n//       errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n//     }\r\n\r\n//     dispatch({\r\n//       type: LOGIN_FAIL\r\n//     });\r\n//   }\r\n// };\r\n\r\n// Logout\r\n//export const logout = () => ({ type: LOGOUT });\r\n"]},"metadata":{},"sourceType":"module"}