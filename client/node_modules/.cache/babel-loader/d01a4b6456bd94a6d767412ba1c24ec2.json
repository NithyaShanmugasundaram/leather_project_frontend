{"ast":null,"code":"import { GET_NUMBER_CART, ADD_CART, DECREASE_QUANTITY, INCREASE_QUANTITY, DELETE_CART } from '../actions/types';\nconst initProduct = {\n  numberCart: 0,\n  Carts: [],\n  _products: []\n};\n\nfunction cartReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initProduct;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  clo;\n\n  switch (type) {\n    case GET_NUMBER_CART:\n      return { ...state\n      };\n\n    case ADD_CART:\n      if (state.numberCart == 0) {\n        let cart = {\n          id: payload.id,\n          quantity: 1,\n          name: payload.name,\n          image: payload.image,\n          original_price: payload.original_price,\n          offer_price: payload.offer_price\n        };\n        state.Carts.push(cart);\n      } else {\n        let check = false;\n        state.Carts.map((item, key) => {\n          if (item.id == payload.id) {\n            state.Carts[key].quantity++;\n            check = true;\n          }\n        });\n\n        if (!check) {\n          let _cart = {\n            id: payload.id,\n            quantity: 1,\n            name: payload.name,\n            image: payload.image,\n            original_price: payload.original_price,\n            offer_price: payload.offer_price\n          };\n          state.Carts.push(_cart);\n        }\n      }\n\n      return { ...state,\n        numberCart: state.numberCart + 1\n      };\n\n    case INCREASE_QUANTITY:\n      state.numberCart++;\n      state.Carts[payload].quantity++;\n      return { ...state\n      };\n\n    case DECREASE_QUANTITY:\n      let quantity = state.Carts[payload].quantity;\n\n      if (quantity > 1) {\n        state.numberCart--;\n        state.Carts[payload].quantity--;\n      }\n\n      return { ...state\n      };\n\n    case DELETE_CART:\n      let quantity_ = state.Carts[payload].quantity;\n      return { ...state,\n        numberCart: state.numberCart - quantity_,\n        Carts: state.Carts.filter(item => {\n          return item.id != state.Carts[payload].id;\n        })\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/nitshanm/Projects/Learning_Projects/leather_project_frontend/client/src/reducers/cart.js"],"names":["GET_NUMBER_CART","ADD_CART","DECREASE_QUANTITY","INCREASE_QUANTITY","DELETE_CART","initProduct","numberCart","Carts","_products","cartReducer","state","action","type","payload","clo","cart","id","quantity","name","image","original_price","offer_price","push","check","map","item","key","_cart","quantity_","filter"],"mappings":"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","sourcesContent":["\r\nimport {\r\n    GET_NUMBER_CART, ADD_CART, DECREASE_QUANTITY, INCREASE_QUANTITY,\r\n    DELETE_CART\r\n} from '../actions/types';\r\n\r\nconst initProduct = {\r\n    numberCart: 0,\r\n    Carts: [],\r\n    _products: []\r\n}\r\n\r\nfunction cartReducer(state = initProduct, action) {\r\n    const { type, payload } = action\r\n    clo\r\n    switch (type) {\r\n\r\n        case GET_NUMBER_CART:\r\n            return {\r\n                ...state\r\n            }\r\n        case ADD_CART:\r\n            if (state.numberCart == 0) {\r\n                let cart = {\r\n                    id: payload.id,\r\n                    quantity: 1,\r\n                    name: payload.name,\r\n                    image: payload.image,\r\n                    original_price: payload.original_price,\r\n                    offer_price: payload.offer_price,\r\n                }\r\n                state.Carts.push(cart);\r\n            }\r\n            else {\r\n                let check = false;\r\n                state.Carts.map((item, key) => {\r\n                    if (item.id == payload.id) {\r\n                        state.Carts[key].quantity++;\r\n                        check = true;\r\n                    }\r\n                });\r\n                if (!check) {\r\n                    let _cart = {\r\n                        id: payload.id,\r\n                        quantity: 1,\r\n                        name: payload.name,\r\n                        image: payload.image,\r\n                        original_price: payload.original_price,\r\n                        offer_price: payload.offer_price,\r\n                    }\r\n                    state.Carts.push(_cart);\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                numberCart: state.numberCart + 1\r\n            }\r\n        case INCREASE_QUANTITY:\r\n            state.numberCart++\r\n            state.Carts[payload].quantity++;\r\n\r\n            return {\r\n                ...state\r\n            }\r\n        case DECREASE_QUANTITY:\r\n            let quantity = state.Carts[payload].quantity;\r\n            if (quantity > 1) {\r\n                state.numberCart--;\r\n                state.Carts[payload].quantity--;\r\n            }\r\n\r\n            return {\r\n                ...state\r\n            }\r\n        case DELETE_CART:\r\n            let quantity_ = state.Carts[payload].quantity;\r\n            return {\r\n                ...state,\r\n                numberCart: state.numberCart - quantity_,\r\n                Carts: state.Carts.filter(item => {\r\n                    return item.id != state.Carts[payload].id\r\n                })\r\n\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}