{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART } from '../actions/types';\nconst initialState = [];\n\nfunction cartReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  console.log('CartReducerpayload', payload);\n\n  switch (type) {\n    case ADD_TO_CART:\n      const existItem = state.find(item => item.id == payload.id);\n\n      if (existItem) {\n        const add_quantity = state.map((item, i) => {\n          item.quantity + 1;\n        });\n        console.log('add_quantity :>> ', add_quantity);\n      }\n\n      return [payload];\n\n    case REMOVE_FROM_CART:\n      return state.filter(alert => alert.id !== payload);\n\n    default:\n      return state;\n  }\n}\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/nitshanm/Projects/Learning_Projects/leather_project_frontend/client/src/reducers/cart.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","initialState","cartReducer","state","action","type","payload","console","log","existItem","find","item","id","add_quantity","map","i","quantity","filter","alert"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG,EAArB;;AAEA,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;AAC/C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,OAAlC;;AACA,UAAQD,IAAR;AACI,SAAKN,WAAL;AACI,YAAMU,SAAS,GAAGN,KAAK,CAACO,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,EAAL,IAAWN,OAAO,CAACM,EAAtC,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACX,cAAMI,YAAY,GAAGV,KAAK,CAACW,GAAN,CAAU,CAACH,IAAD,EAAOI,CAAP,KAAa;AACxCJ,UAAAA,IAAI,CAACK,QAAL,GAAgB,CAAhB;AACH,SAFoB,CAArB;AAGAT,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCK,YAAjC;AACH;;AACD,aAAO,CAACP,OAAD,CAAP;;AACJ,SAAKN,gBAAL;AACI,aAAOG,KAAK,CAACc,MAAN,CAAcC,KAAD,IAAWA,KAAK,CAACN,EAAN,KAAaN,OAArC,CAAP;;AACJ;AACI,aAAOH,KAAP;AAbR;AAeH;;AAED,eAAeD,WAAf","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nfunction cartReducer(state = initialState, action) {\r\n    const { type, payload } = action;\r\n    console.log('CartReducerpayload', payload)\r\n    switch (type) {\r\n        case ADD_TO_CART:\r\n            const existItem = state.find(item => item.id == payload.id)\r\n            if (existItem) {\r\n                const add_quantity = state.map((item, i) => {\r\n                    item.quantity + 1\r\n                })\r\n                console.log('add_quantity :>> ', add_quantity);\r\n            }\r\n            return [payload];\r\n        case REMOVE_FROM_CART:\r\n            return state.filter((alert) => alert.id !== payload);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}